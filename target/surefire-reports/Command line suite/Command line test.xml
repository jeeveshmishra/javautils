<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Jeeveshs-MBP.lan" name="Command line test" tests="91" failures="0" timestamp="28 Jan 2017 19:30:16 GMT" time="0.492" errors="0">
  <testcase name="test_difference" time="0.008" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_eliminateDuplicates" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_getSingleOrDefault_whenListContainsMultipleElements_willThrowException" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_getSingleOrDefault_whenListIsNull_willThrowException" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_getSingle_whenListContainsMultipleElements_willThrowException" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_getSingle_whenListIsNull_willThrowException" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_getSingle_whenSingleElement_willReturnElement" time="0.001" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_isNullOrEmpty_whenListIsEmpty" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_isNullOrEmpty_whenListIsNotNullOrEmpty" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_isNullOrEmpty_whenListIsNull" time="0.0" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="test_toArray" time="0.001" classname="my.utils.CollectionUtilsTest"/>
  <testcase name="testCryptography" time="0.072" classname="my.utils.CryptographyUtilsTest"/>
  <testcase name="testCryptography_when_saltString_not_same" time="0.001" classname="my.utils.CryptographyUtilsTest"/>
  <testcase name="test_Parse_Invalid_Date" time="0.017" classname="my.utils.DateTimeTest"/>
  <testcase name="test_Parse_Invalid_Format" time="0.0" classname="my.utils.DateTimeTest"/>
  <testcase name="test_copy_DateTime" time="0.0" classname="my.utils.DateTimeTest"/>
  <testcase name="test_format" time="0.001" classname="my.utils.DateTimeTest"/>
  <testcase name="test_format_enum" time="0.001" classname="my.utils.DateTimeTest"/>
  <testcase name="test_of_Date" time="0.052" classname="my.utils.DateTimeTest"/>
  <testcase name="test_of_Instant" time="0.0" classname="my.utils.DateTimeTest"/>
  <testcase name="test_of_dateFormat_toXmlGregorianCalendar" time="0.003" classname="my.utils.DateTimeTest"/>
  <testcase name="test_of_dateTime_toXmlGregorianCalendar" time="0.0" classname="my.utils.DateTimeTest"/>
  <testcase name="test_toString" time="0.0" classname="my.utils.DateTimeTest"/>
  <testcase name="test_filter" time="0.002" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_filterNot" time="0.001" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_foreach_whenNoException" time="0.001" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_foreach_whenThrowException" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_merge" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_merge_whenSourceIsNull" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_of_entrySet" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_of_map" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_put" time="0.0" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_remove" time="0.001" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_values" time="0.002" classname="my.utils.FunctionalMapTest"/>
  <testcase name="test_deserialize" time="0.159" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_deserialize_invalidJson" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_deserialize_invalidJson_withDefaultValue" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_deserialize_list" time="0.039" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_deserialize_nestedObject" time="0.001" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_deserialize_strict" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_serialize" time="0.002" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_serialize_list" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_serialize_multivaluedMap" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_serialize_nestedObject" time="0.0" classname="my.utils.JsonUtilsTest"/>
  <testcase name="test_filter" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_filterNot" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_firstOrDefault_byCondition" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_first_byCondition" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_get" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_last" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_lastOrDefault" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_lastOrDefault_whenSourceIsEmpty" time="0.002" classname="my.utils.SequenceTest"/>
  <testcase name="test_map" time="0.006" classname="my.utils.SequenceTest"/>
  <testcase name="test_max" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_max_ofInnerValue" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_min" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_min_ofInnerValue" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_remove" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_removeNullValues" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_remove_whenFilterArrayOfValues" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_remove_whenSeveralValues" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_add" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_isEmpty_whenNullSource" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_isEmpty_whenSourceIsEmpty" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_isEmpty_whenSourceIsNotEmpty" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_merge_array" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_merge_collection" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_ofArray" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_ofArray_whenSourceIsNull" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_ofList" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_ofList_whenSourceIsNull" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_ofValues" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_remove" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_removeByArray" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_removeByEmptyArray" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_removeByIndex" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sequence_single" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_size" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sort" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_sortBy" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sortBy_desc" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_sort_desc" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_take" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_take_fromWithSize" time="0.001" classname="my.utils.SequenceTest"/>
  <testcase name="test_take_whenSizeIsMoreThenSource" time="0.0" classname="my.utils.SequenceTest"/>
  <testcase name="test_getElementXml" time="0.06" classname="my.utils.XmlUtilsTest"/>
  <testcase name="test_getElementXml_withoutNamespace" time="0.005" classname="my.utils.XmlUtilsTest"/>
  <testcase name="test_getFirstChildElement" time="0.006" classname="my.utils.XmlUtilsTest"/>
  <testcase name="test_getNamespace" time="0.003" classname="my.utils.XmlUtilsTest"/>
  <testcase name="test_getNode" time="0.004" classname="my.utils.XmlUtilsTest"/>
  <testcase name="test_getNode_withoutNamespace" time="0.004" classname="my.utils.XmlUtilsTest"/>
</testsuite> <!-- Command line test -->
